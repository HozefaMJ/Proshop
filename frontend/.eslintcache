[{"E:\\Udemy\\Proshop\\frontend\\src\\index.js":"1","E:\\Udemy\\Proshop\\frontend\\src\\App.js":"2","E:\\Udemy\\Proshop\\frontend\\src\\reportWebVitals.js":"3","E:\\Udemy\\Proshop\\frontend\\src\\components\\Header.js":"4","E:\\Udemy\\Proshop\\frontend\\src\\components\\Footer.js":"5","E:\\Udemy\\Proshop\\frontend\\src\\screens\\HomeScreen.js":"6","E:\\Udemy\\Proshop\\frontend\\src\\products.js":"7","E:\\Udemy\\Proshop\\frontend\\src\\components\\Product.js":"8","E:\\Udemy\\Proshop\\frontend\\src\\components\\Rating.js":"9","E:\\Udemy\\Proshop\\frontend\\src\\screens\\ProductScreen.js":"10","E:\\Udemy\\Proshop\\frontend\\src\\store.js":"11","E:\\Udemy\\Proshop\\frontend\\src\\reducers\\productReducers.js":"12","E:\\Udemy\\Proshop\\frontend\\src\\constants\\productConstants.js":"13","E:\\Udemy\\Proshop\\frontend\\src\\actions\\productActions.js":"14","E:\\Udemy\\Proshop\\frontend\\src\\components\\Message.js":"15","E:\\Udemy\\Proshop\\frontend\\src\\components\\Loader.js":"16","E:\\Udemy\\Proshop\\frontend\\src\\screens\\CartScreen.js":"17","E:\\Udemy\\Proshop\\frontend\\src\\reducers\\cartReducers.js":"18","E:\\Udemy\\Proshop\\frontend\\src\\constants\\cartConstants.js":"19","E:\\Udemy\\Proshop\\frontend\\src\\actions\\cartActions.js":"20","E:\\Udemy\\Proshop\\frontend\\src\\reducers\\userReducers.js":"21","E:\\Udemy\\Proshop\\frontend\\src\\constants\\userConstants.js":"22","E:\\Udemy\\Proshop\\frontend\\src\\screens\\LoginScreen.js":"23","E:\\Udemy\\Proshop\\frontend\\src\\components\\FormContainer.js":"24","E:\\Udemy\\Proshop\\frontend\\src\\actions\\userActions.js":"25","E:\\Udemy\\Proshop\\frontend\\src\\screens\\RegisterScreen.js":"26","E:\\Udemy\\Proshop\\frontend\\src\\screens\\ProfileScreen.js":"27","E:\\Udemy\\Proshop\\frontend\\src\\screens\\ShippingScreen.js":"28","E:\\Udemy\\Proshop\\frontend\\src\\components\\CheckoutSteps.js":"29","E:\\Udemy\\Proshop\\frontend\\src\\screens\\PaymentScreen.js":"30","E:\\Udemy\\Proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","E:\\Udemy\\Proshop\\frontend\\src\\reducers\\orderReducers.js":"32","E:\\Udemy\\Proshop\\frontend\\src\\constants\\orderConstants.js":"33","E:\\Udemy\\Proshop\\frontend\\src\\actions\\orderActions.js":"34","E:\\Udemy\\Proshop\\frontend\\src\\screens\\OrderScreen.js":"35","E:\\Udemy\\Proshop\\frontend\\src\\screens\\UserListScreen.js":"36","E:\\Udemy\\Proshop\\frontend\\src\\screens\\UserEditScreen.js":"37","E:\\Udemy\\Proshop\\frontend\\src\\screens\\ProductListScreen.js":"38","E:\\Udemy\\Proshop\\frontend\\src\\screens\\ProductEditScreen.js":"39","E:\\Udemy\\Proshop\\frontend\\src\\screens\\OrderListScreen.js":"40"},{"size":597,"mtime":1608297329812,"results":"41","hashOfConfig":"42"},{"size":2195,"mtime":1609762413556,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":2785,"mtime":1609658551171,"results":"45","hashOfConfig":"42"},{"size":427,"mtime":1607784508677,"results":"46","hashOfConfig":"42"},{"size":1640,"mtime":1608300457918,"results":"47","hashOfConfig":"42"},{"size":2485,"mtime":1607794523745,"results":"48","hashOfConfig":"42"},{"size":1169,"mtime":1608485864764,"results":"49","hashOfConfig":"42"},{"size":1164,"mtime":1607787213110,"results":"50","hashOfConfig":"42"},{"size":8059,"mtime":1609837397128,"results":"51","hashOfConfig":"42"},{"size":2410,"mtime":1609834973297,"results":"52","hashOfConfig":"42"},{"size":3555,"mtime":1609834910315,"results":"53","hashOfConfig":"42"},{"size":1381,"mtime":1609834772251,"results":"54","hashOfConfig":"42"},{"size":4785,"mtime":1609835239027,"results":"55","hashOfConfig":"42"},{"size":294,"mtime":1608323921069,"results":"56","hashOfConfig":"42"},{"size":340,"mtime":1608300219931,"results":"57","hashOfConfig":"42"},{"size":4075,"mtime":1608326264120,"results":"58","hashOfConfig":"42"},{"size":1377,"mtime":1608794029436,"results":"59","hashOfConfig":"42"},{"size":240,"mtime":1608793771940,"results":"60","hashOfConfig":"42"},{"size":1384,"mtime":1608793893956,"results":"61","hashOfConfig":"42"},{"size":4049,"mtime":1609667168803,"results":"62","hashOfConfig":"42"},{"size":1552,"mtime":1609667037347,"results":"63","hashOfConfig":"42"},{"size":2224,"mtime":1608488796343,"results":"64","hashOfConfig":"42"},{"size":392,"mtime":1608487611711,"results":"65","hashOfConfig":"42"},{"size":6439,"mtime":1609667663097,"results":"66","hashOfConfig":"42"},{"size":3201,"mtime":1609665924965,"results":"67","hashOfConfig":"42"},{"size":5821,"mtime":1609608286003,"results":"68","hashOfConfig":"42"},{"size":2494,"mtime":1608747829060,"results":"69","hashOfConfig":"42"},{"size":1440,"mtime":1608747883903,"results":"70","hashOfConfig":"42"},{"size":1747,"mtime":1608794440836,"results":"71","hashOfConfig":"42"},{"size":6090,"mtime":1608802025594,"results":"72","hashOfConfig":"42"},{"size":4266,"mtime":1609763556961,"results":"73","hashOfConfig":"42"},{"size":1237,"mtime":1609763522617,"results":"74","hashOfConfig":"42"},{"size":5034,"mtime":1609763840343,"results":"75","hashOfConfig":"42"},{"size":8831,"mtime":1609764677581,"results":"76","hashOfConfig":"42"},{"size":3079,"mtime":1609665829882,"results":"77","hashOfConfig":"42"},{"size":3089,"mtime":1609668227787,"results":"78","hashOfConfig":"42"},{"size":4358,"mtime":1609753072768,"results":"79","hashOfConfig":"42"},{"size":5892,"mtime":1609760515063,"results":"80","hashOfConfig":"42"},{"size":3119,"mtime":1609762845894,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"srhbh1",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},"E:\\Udemy\\Proshop\\frontend\\src\\index.js",[],["167","168"],"E:\\Udemy\\Proshop\\frontend\\src\\App.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\reportWebVitals.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\components\\Header.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\components\\Footer.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\HomeScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\products.js",[],["169","170"],"E:\\Udemy\\Proshop\\frontend\\src\\components\\Product.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\components\\Rating.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\ProductScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\store.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\reducers\\productReducers.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\constants\\productConstants.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\actions\\productActions.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\components\\Message.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\components\\Loader.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\CartScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\reducers\\cartReducers.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\constants\\cartConstants.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\actions\\cartActions.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\reducers\\userReducers.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\constants\\userConstants.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\LoginScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\components\\FormContainer.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\actions\\userActions.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\RegisterScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\ProfileScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\components\\CheckoutSteps.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\PaymentScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",["171"],"import React, {useEffect} from 'react'\r\nimport {Button, Row, Col, ListGroup, Image, Card} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport {saveShippingAddress} from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport {createOrder} from \"../actions/orderActions\";\r\n\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100)/100).toFixed(2)\r\n    }\r\n\r\n    // Calculate Prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n\r\n    cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice))\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order,success,error} = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <CheckoutSteps step1 step2 step3 step4/>\r\n          <Row>\r\n              <Col md={8}>\r\n                  <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                          <h2>Shipping</h2>\r\n                          <p>\r\n                              <strong>Address: </strong>\r\n                              {cart.shippingAddress.address}, {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}, {cart.shippingAddress.country},\r\n                          </p>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          <h2>Payment Methods</h2>\r\n                          <strong>Method: </strong>\r\n                          {cart.paymentMethod}\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          <h2>Order Items: </h2>\r\n                          {cart.cartItems === 0 ? \r\n                            <Message>Your cart is empty</Message>: (\r\n                            <ListGroup variant=\"flush\">\r\n                                {cart.cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                            )}\r\n                      </ListGroup.Item>\r\n                  </ListGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                  <Card>\r\n                      <ListGroup variant='flush'>\r\n                          <ListGroup.Item>\r\n                              <h2>\r\n                                  Order Summary\r\n                              </h2>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Items</Col>\r\n                                  <Col>${cart.itemsPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Shipping</Col>\r\n                                  <Col>${cart.shippingPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Tax</Col>\r\n                                  <Col>${cart.taxPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Total</Col>\r\n                                  <Col>${cart.totalPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              {error && <Message variant=\"danger\">{error}</Message>}\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                          </ListGroup.Item>\r\n                      </ListGroup>\r\n                  </Card>\r\n              </Col>\r\n          </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","E:\\Udemy\\Proshop\\frontend\\src\\reducers\\orderReducers.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\constants\\orderConstants.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\actions\\orderActions.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\OrderScreen.js",["172"],"import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport {PayPalButton} from 'react-paypal-button-v2';\r\nimport { Row, Col, ListGroup, Image, Card, Button} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {getOrderDetails, payOrder, deliverOrder} from \"../actions/orderActions\";\r\nimport {ORDER_PAY_RESET, ORDER_DELIVER_RESET} from \"../constants/orderConstants\";\r\n\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSDKReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order,loading,error} = orderDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingPay,success:successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading:loadingDeliver,success:successDeliver} = orderDeliver\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const {data:clientId} = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSDKReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if(!order || successPay || successDeliver) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        } else if(!order.isPaid){\r\n            if(!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSDKReady(true)\r\n            }\r\n        }\r\n\r\n        if(!order || order._id !== orderId){\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n    }, [dispatch,order, orderId, successPay, successDeliver])\r\n\r\n\r\n    if(!loading){\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100)/100).toFixed(2)\r\n        }\r\n        // Calculate Prices\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0))    \r\n    }\r\n    \r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? <Loader/> : error ? \r\n    <Message variant=\"danger\">{error}</Message> : \r\n    <>\r\n        <h1>Order {order._id}</h1>\r\n        <Row>\r\n              <Col md={8}>\r\n                  <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                          <h2>Shipping</h2>\r\n                          <p><strong>Name: </strong> {order.user.name}</p>\r\n                          <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                          <p>\r\n                              <strong>Address: </strong>\r\n                              {order.shippingAddress.address}, {order.shippingAddress.city}, {order.shippingAddress.postalCode}, {order.shippingAddress.country},\r\n                          </p>\r\n                          {order.isDelivered ? <Message variant=\"success\">Delivered on {order.deliveredAt}</Message> :\r\n                            <Message variant=\"danger\">Not Delivered</Message>\r\n                          }\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          <h2>Payment Methods</h2>\r\n                          <p>\r\n                          <strong>Method: </strong>\r\n                          {order.paymentMethod}\r\n                          </p>\r\n                          {order.isPaid ? <Message variant=\"success\">Paid on {order.paidAt}</Message> :\r\n                            <Message variant=\"danger\">Not Paid</Message>\r\n                          }\r\n                      </ListGroup.Item>\r\n\r\n                      <ListGroup.Item>\r\n                          <h2>Order Items: </h2>\r\n                          {order.orderItems.length === 0 ? \r\n                            <Message>Order is empty</Message>: (\r\n                            <ListGroup variant=\"flush\">\r\n                                {order.orderItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                            )}\r\n                      </ListGroup.Item>\r\n                  </ListGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                  <Card>\r\n                      <ListGroup variant='flush'>\r\n                          <ListGroup.Item>\r\n                              <h2>\r\n                                  Order Summary\r\n                              </h2>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Items</Col>\r\n                                  <Col>${order.itemsPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Shipping</Col>\r\n                                  <Col>${order.shippingPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Tax</Col>\r\n                                  <Col>${order.taxPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Total</Col>\r\n                                  <Col>${order.totalPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              {!order.isPaid && (\r\n                                  <ListGroup.Item>\r\n                                      {loadingPay && <Loader/>}\r\n                                      {!sdkReady ? <Loader/> : (\r\n                                          <PayPalButton \r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler} \r\n                                          />\r\n                                      )}\r\n                                  </ListGroup.Item>\r\n                              )}\r\n                              {loadingDeliver && <Loader/>}\r\n                              {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                  <ListGroup.Item>\r\n                                      <Button type=\"button\" className=\"btn btn-block\" onClick={deliverHandler}>\r\n                                          Mark as Delivered\r\n                                      </Button>\r\n                                  </ListGroup.Item>\r\n                              )}\r\n                          </ListGroup.Item>\r\n                          \r\n                      </ListGroup>\r\n                  </Card>\r\n              </Col>\r\n          </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen;\r\n","E:\\Udemy\\Proshop\\frontend\\src\\screens\\UserListScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\UserEditScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\ProductListScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\ProductEditScreen.js",[],"E:\\Udemy\\Proshop\\frontend\\src\\screens\\OrderListScreen.js",["173","174"],"import React, {useEffect} from 'react'\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {Button,Table} from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {listOrders} from \"../actions/orderActions\";\r\n\r\nconst OrderListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n    useEffect(()=> {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader/> : error ? <Message variant=\"danger\">{error}</Message>:(\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>User</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th>Details</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0,10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (order.paidAt.substring(0,10)):\r\n                                (<i className=\"fa fa-times\" style={{color:'red'}}></i>)}</td>\r\n                                <td>{order.isDelivered ? (order.deliveredAt.substring(0,10)):\r\n                                (<i className=\"fa fa-times\" style={{color:'red'}}></i>)}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        \r\n                                        <a>\r\n                                            <i className='fas fa-info-circle'></i>\r\n                                        </a>\r\n                                        {/*\r\n                                        <Button variant=\"light\" className=\"btn-sm\"></Button>\r\n                                        */}    \r\n                                    </LinkContainer>\r\n                                    \r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"175","replacedBy":"179"},{"ruleId":"177","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":6,"column":9,"nodeType":"183","messageId":"184","endLine":6,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":68,"column":8,"nodeType":"187","endLine":68,"endColumn":61,"suggestions":"188"},{"ruleId":"181","severity":1,"message":"189","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":60,"column":41,"nodeType":"192","endLine":60,"endColumn":44},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],["193"],["194"],"no-unused-vars","'saveShippingAddress' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["195"],"'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"198","text":"199"},[2312,2365],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]"]